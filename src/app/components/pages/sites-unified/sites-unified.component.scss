.sites-page-container {
  display: flex;
  gap: 16px;
  height: calc(100vh - 120px);
  padding: var(--spacing-lg);
  background-color: var(--md-sys-color-surface);
}

.site-tree-panel {
  width: 280px;
  background: white;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
  overflow: hidden;
  flex-shrink: 0;
}

.tree-header {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 16px;
  background: #f5f5f5;
  border-bottom: 1px solid #e0e0e0;

  mat-icon {
    font-size: 20px;
    width: 20px;
    height: 20px;
    color: #616161;
  }

  span {
    flex: 1;
    font-weight: 500;
    font-size: 14px;
  }

  .tree-header-actions {
    display: flex;
    gap: 4px;

    button {
      width: 32px;
      height: 32px;

      mat-icon {
        font-size: 18px;
        width: 18px;
        height: 18px;
      }
    }
  }
}

.tree-content {
  padding: 8px;
  overflow-y: auto;
  max-height: calc(100vh - 180px);
}

.tree-level {
  margin-left: 0;
}

.tree-node {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 6px 8px;
  cursor: pointer;
  border-radius: 4px;
  transition: background-color 0.2s;

  &:hover {
    background-color: #f5f5f5;
  }

  .expand-icon {
    font-size: 20px;
    width: 20px;
    height: 20px;
    color: #616161;
    flex-shrink: 0;
  }

  .tree-checkbox {
    margin: 0;
    flex-shrink: 0;
  }

  .node-label {
    font-size: 13px;
    color: #202124;
    flex: 1;
    word-break: break-word;
  }

  .country-label {
    font-weight: 600;
    font-size: 14px;
  }

  .site-label {
    font-weight: 500;
  }

  .location-label {
    font-size: 12px;
    color: #5f6368;
  }
}

.location-node {
  padding-left: 12px;
}

.tree-indent {
  width: 20px;
  flex-shrink: 0;
}

.tree-children {
  margin-left: 20px;
  border-left: 1px solid #e0e0e0;
  padding-left: 4px;
}

.site-level {
  .tree-node {
    padding-left: 4px;
  }
}

.location-level {
  .tree-node {
    padding: 4px 8px;
    cursor: default;

    &:hover {
      background-color: transparent;
    }
  }
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0; // Remove gap to connect filters and table

  app-sync-status-indicator {
    display: block;
  }
}

.complex-filters {
  background: white;
  border-radius: 8px 8px 0 0; // Only round top corners
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  border-bottom: 1px solid #e0e0e0; // Connect to table below
}

.filter-row {
  display: flex;
  align-items: center;
  gap: 12px;

  .filter-label {
    font-size: 14px;
    color: #616161;
  }

  .filter-pills {
    display: flex;
    gap: 8px;
  }

  .filter-pill {
    border-radius: 20px;
    padding: 6px 16px;
    font-size: 14px;
    background: white;
    border: 1px solid #e0e0e0;

    &.active {
      background: #1565C0;
      color: white;
    }
  }
}

.global-filter {
  display: flex;
  align-items: center;
  gap: 12px;

  .filter-search {
    width: 300px;
  }

  .action-buttons {
    margin-left: auto;
    display: flex;
    align-items: center;
    gap: 8px;
  }
}

// Table container with footer (matches circuits pattern)
.table-with-footer {
  position: relative;
  background: white;
  border-radius: 0 0 8px 8px; // Only round bottom corners
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);

  // Override base-table to remove its own background/shadow since we're wrapping it
  ::ng-deep app-base-table .base-table-container {
    background: transparent;
    box-shadow: none;
    border-radius: 0 0 8px 8px; // Match container
  }

  // Footer with timestamp and refresh button (left side)
  .table-footer-info {
    position: absolute;
    bottom: 8px;
    left: 16px;
    display: flex;
    align-items: center;
    gap: 8px;
    z-index: 5;

    .last-updated-text {
      font-size: 0.75rem;
      color: var(--md-sys-color-on-surface-variant, #666);
      white-space: nowrap;
    }

    .refresh-button-small {
      width: 32px;
      height: 32px;
      line-height: 32px;

      ::ng-deep .mat-icon {
        font-size: 20px;
        width: 20px;
        height: 20px;
        line-height: 20px;

        &.spinning {
          animation: spin 1s linear infinite;
        }
      }
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
